USE DATABASE UDACITY;
USE SCHEMA ODS;

-- create ODS_TEMPERATURE table
CREATE OR REPLACE TABLE ODS_TEMPERATURE(
    "DATE" DATE,
    "MIN" FLOAT,
    "MAX" FLOAT,
    "NORMAL_MIN" FLOAT,
    "NORMAL_MAX" FLOAT
);

-- create ODS_PRECIPITATION table
CREATE OR REPLACE TABLE ODS_PRECIPITATION(
    "DATE" DATE,
    "PRECIPITATION" FLOAT,
    "PRECIPITATION_NORMAL" FLOAT
);

-- create ODS_YELP_BUSINESS table
CREATE OR REPLACE TABLE ODS_YELP_BUSINESS(
    "BUSINESS_ID" VARCHAR(50),
    "NAME" VARCHAR(255),
    "ADDRESS" VARCHAR(255),
    "CITY" VARCHAR(255),
    "STATE" VARCHAR(10),
    "POSTAL_CODE" VARCHAR(10),
    "LATITUDE" FLOAT,
    "LONGITUDE" FLOAT,
    "STARS" FLOAT,
    "REVIEW_COUNT" INTEGER,
    "IS_OPEN" INTEGER,
    "ATTRIBUTES" VARIANT,
    "CATEGORIES" STRING,
    "HOURS" VARIANT
);

-- create ODS_YELP_REVIEW table
CREATE OR REPLACE TABLE ODS_YELP_REVIEW(
    "REVIEW_ID" VARCHAR(50),
    "USER_ID" VARCHAR(50),
    "BUSINESS_ID" VARCHAR(50),
    "STARS" FLOAT,
    "USEFUL" INTEGER,
    "FUNNY" INTEGER,
    "COOL" INTEGER,
    "TEXT" STRING,
    "DATE" DATE
);

-- create ODS_YELP_USER table
CREATE OR REPLACE TABLE ODS_YELP_USER(
    "USER_ID" VARCHAR(50),
    "NAME" VARCHAR(255),
    "REVIEW_COUNT" INTEGER,
    "YELPING_SINCE" DATE,
    "USEFUL" INTEGER,
    "FUNNY" INTEGER,
    "COOL" INTEGER,
    "ELITE" STRING,
    "FRIENDS" VARIANT,
    "FANS" INTEGER,
    "AVERAGE_STARS" FLOAT,
    "COMPLIMENT_HOT" INTEGER,
    "COMPLIMENT_MORE" INTEGER,
    "COMPLIMENT_PROFILE" INTEGER,
    "COMPLIMENT_CUTE" INTEGER,
    "COMPLIMENT_LIST" INTEGER,
    "COMPLIMENT_NOTE" INTEGER,
    "COMPLIMENT_PLAIN" INTEGER,
    "COMPLIMENT_COOL" INTEGER,
    "COMPLIMENT_FUNNY" INTEGER,
    "COMPLIMENT_WRITER" INTEGER,
    "COMPLIMENT_PHOTOS" INTEGER
);

-- create ODS_YELP_CHECKIN table
CREATE OR REPLACE TABLE ODS_YELP_CHECKIN(
    "BUSINESS_ID" VARCHAR(50),
    "DATE" VARIANT
);

-- create ODS_YELP_TIP table
CREATE OR REPLACE TABLE ODS_YELP_TIP(
    "USER_ID" VARCHAR(50),
    "BUSINESS_ID" VARCHAR(50),
    "TEXT" STRING,
    "DATE" DATE,
    "COMPLIMENT_COUNT" INTEGER
);

-- create ODS_YELP_COVID table
CREATE OR REPLACE TABLE ODS_YELP_COVID(
    "BUSINESS_ID" VARCHAR(50),
    "HIGHLIGHTS" VARIANT,
    "DELIVERY_OR_TAKEOUT" VARIANT,
    "GRUBHUB_ENABLED" VARIANT,
    "CALL_TO_ACTION_ENABLED" VARIANT,
    "REQUEST_A_QUOTE_ENABLED" VARIANT,
    "COVID_BANNER" VARIANT,
    "TEMPORARY_CLOSED_UNTIL" VARIANT,
    "VIRTUAL_SERVICES_OFFERED" VARIANT
);


-------- INSERT INTO ODS FROM FROM STAGING--------------------
-- ODS_TEMPERATURE
INSERT INTO 
    ODS.ODS_TEMPERATURE( "DATE", "MIN", "MAX", "NORMAL_MIN", "NORMAL_MAX")
SELECT
    TO_DATE(DATE, 'YYYYMMDD'), 
    CAST(MIN AS FLOAT), 
    CAST(MAX AS FLOAT),
    CAST(NORMAL_MIN AS FLOAT), 
    CAST(NORMAL_MAX AS FLOAT)
FROM STAGING.STG_TEMPERATURE;

-- ODS_PRECIPITATION
INSERT INTO 
    ODS.ODS_PRECIPITATION("DATE", "PRECIPITATION", "PRECIPITATION_NORMAL")
SELECT
    TO_DATE(DATE, 'YYYYMMDD'), 
    CAST(PRECIPITATION AS FLOAT), 
    CAST(PRECIPITATION_NORMAL AS FLOAT)
FROM STAGING.STG_PRECIPITATION;


-- ODS_YELP_BUSINESS
INSERT INTO 
    ODS.ODS_YELP_BUSINESS(
    "BUSINESS_ID",
    "NAME",
    "ADDRESS",
    "CITY",
    "STATE",
    "POSTAL_CODE",
    "LATITUDE",
    "LONGITUDE",
    "STARS",
    "REVIEW_COUNT",
    "IS_OPEN",
    "ATTRIBUTES",
    "CATEGORIES",
    "HOURS" 
    )
SELECT
     BUSINES_INFO:business_id,
     BUSINES_INFO:name,
     BUSINES_INFO:address,
     BUSINES_INFO:city, 
     BUSINES_INFO:state, 
     BUSINES_INFO:postal_code, 
     BUSINES_INFO:latitude, 
     BUSINES_INFO:longitude, 
     BUSINES_INFO:stars, 
     BUSINES_INFO:review_count, 
     BUSINES_INFO:is_open, 
     BUSINES_INFO:attributes, 
     BUSINES_INFO:categories, 
     BUSINES_INFO:hours
FROM STAGING.STG_YELP_BUSINESS;

-- ODS_YELP_REVIEW
INSERT INTO ODS_YELP_REVIEW(
    "REVIEW_ID",
    "USER_ID",
    "BUSINESS_ID",
    "STARS",
    "USEFUL",
    "FUNNY",
    "COOL",
    "TEXT",
    "DATE"
) SELECT
     REVIEW_INFO:review_id,
     REVIEW_INFO:user_id,
     REVIEW_INFO:business_id,
     REVIEW_INFO:stars, 
     REVIEW_INFO:useful, 
     REVIEW_INFO:funny, 
     REVIEW_INFO:cool, 
     REVIEW_INFO:text, 
     REVIEW_INFO:date
FROM STAGING.STG_YELP_REVIEW;

-- ODS_YELP_REVIEW
INSERT INTO ODS_YELP_USER(
    "USER_ID",
    "NAME",
    "REVIEW_COUNT",
    "YELPING_SINCE",
    "USEFUL",
    "FUNNY",
    "COOL",
    "ELITE",
    "FRIENDS",
    "FANS",
    "AVERAGE_STARS",
    "COMPLIMENT_HOT",
    "COMPLIMENT_MORE",
    "COMPLIMENT_PROFILE",
    "COMPLIMENT_CUTE",
    "COMPLIMENT_LIST",
    "COMPLIMENT_NOTE",
    "COMPLIMENT_PLAIN",
    "COMPLIMENT_COOL",
    "COMPLIMENT_FUNNY",
    "COMPLIMENT_WRITER",
    "COMPLIMENT_PHOTOS"
) SELECT
    USER_INFO:user_id,
    USER_INFO:name,
    USER_INFO:review_count,
    USER_INFO:yelping_since,
    USER_INFO:useful,
    USER_INFO:funny,
    USER_INFO:cool,
    USER_INFO:elite,
    USER_INFO:friends,
    USER_INFO:fans,
    USER_INFO:average_stars,
    USER_INFO:compliment_hot,
    USER_INFO:compliment_more,
    USER_INFO:compliment_profile,
    USER_INFO:compliment_cute,
    USER_INFO:compliment_list,
    USER_INFO:compliment_note,
    USER_INFO:compliment_plain,
    USER_INFO:compliment_cool,
    USER_INFO:compliment_funny,
    USER_INFO:compliment_writer,
    USER_INFO:compliment_photos
FROM STAGING.STG_YELP_USER;

-- ODS_YELP_CHECKIN
INSERT INTO ODS_YELP_CHECKIN(
    "BUSINESS_ID",
    "DATE"
) SELECT 
    CHECKIN_INFO:business_id,
    CHECKIN_INFO:date
FROM STAGING.STG_YELP_CHECKIN;

-- ODS_YELP_TIP
INSERT INTO ODS_YELP_TIP(
    "USER_ID",
    "BUSINESS_ID",
    "TEXT",
    "DATE",
    "COMPLIMENT_COUNT"
) SELECT
    TIP_INFO:user_id,
    TIP_INFO:business_id,
    TIP_INFO:text,
    TIP_INFO:date,
    TIP_INFO:compliment_count
FROM STAGING.STG_YELP_TIP;

-- ODS_YELP_COVID
INSERT INTO ODS_YELP_COVID(
    "BUSINESS_ID",
    "HIGHLIGHTS",
    "DELIVERY_OR_TAKEOUT",
    "GRUBHUB_ENABLED",
    "CALL_TO_ACTION_ENABLED",
    "REQUEST_A_QUOTE_ENABLED",
    "COVID_BANNER",
    "TEMPORARY_CLOSED_UNTIL",
    "VIRTUAL_SERVICES_OFFERED"
) SELECT
    COVID_INFO:business_id,
    COVID_INFO:highlights,
    COVID_INFO:delivery_or_takeout,
    COVID_INFO:Grubhub_enabled,
    COVID_INFO:Call_To_Action_enabled,
    COVID_INFO:Request_a_Quote_Enabled,
    COVID_INFO:Covid_Banner,
    COVID_INFO:Temporary_Closed_Until,
    COVID_INFO:Virtual_Services_Offered
FROM STAGING.STG_YELP_COVID;